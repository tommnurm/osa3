{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","newFilter","onChange","handleFilterChange","PersonForm","onSubmit","addName","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","personsToShow","map","person","key","name","number","onClick","removeName","require","config","url","getAll","axios","get","then","response","data","newPerson","post","id","delete","updatedPerson","put","Notification","message","confirm","className","App","useState","persons","setPersons","useEffect","personService","initialPersons","setNewName","setNewNumber","setNewFilter","showAll","setShowAll","setMessage","isConfirm","setIsConfirm","filter","toLowerCase","includes","updateNumber","window","list","find","item","updatedPersons","setTimeout","catch","error","event","target","preventDefault","concat","per","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddc944ba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <form>\r\n            <div>\r\n            Filter shown with <input \r\n                value={props.newFilter} \r\n                onChange={props.handleFilterChange}\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.addName}>\r\n          <div>\r\n            name: <input\r\n                value={props.newName}\r\n                onChange={props.handleNameChange}\r\n              />\r\n          </div>\r\n          <div>\r\n            number: <input\r\n                value={props.newNumber}\r\n                onChange={props.handleNumberChange}\r\n              />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n    )\r\n  }\r\n  export default PersonForm","import React from 'react';\r\n\r\nconst Persons = (props) => {\r\n    \r\n    const formatNameList = (list) => list.map(person => {\r\n        return <div key={person.name}>{person.name} {person.number} <button onClick={() => props.removeName(person)}>{'delete'}</button> </div>  \r\n    })\r\n\r\n    return formatNameList(props.personsToShow)\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nrequire('dotenv').config()\r\n\r\nconst url = 'https://radiant-tor-77935.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(url)\r\n    return req.then(response => response.data)\r\n}\r\n\r\nconst create = (newPerson) => {\r\n    const req = axios.post(url, newPerson)\r\n    return req.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const req = axios.delete(`${url}/${id}`)\r\n    return req.then(() => getAll())\r\n}\r\n\r\nconst update = (id, updatedPerson) => {\r\n    const req = axios.put(`${url}/${id}`, updatedPerson)\r\n    return req.then(() => getAll())\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    remove,\r\n    update\r\n}","import React from 'react'\r\n\r\nconst Notification = ({ message , confirm}) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    if (confirm) {\r\n        return (\r\n            <div className=\"confirm\">\r\n                {message}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"error\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n\r\n  export default Notification","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n\n    const [persons, setPersons] = useState([])\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ newFilter, setNewFilter ] = useState('')\n    const [ showAll, setShowAll ] = useState(true)\n    const [ message, setMessage ] = useState(null)\n    const [ isConfirm, setIsConfirm ] = useState(true)\n\n    const personsToShow = showAll\n        ? persons\n        : persons.filter((person) => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n    const addName = (event) => {\n        event.preventDefault()\n        \n        const names = () => persons.map(person => person.name)\n\n        if (names().includes(newName)) {\n            updateNumber(newName,newNumber)\n        } else {\n            const name = {\n                name: newName,\n                number: newNumber\n            }\n            personService\n                .create(name)\n                .then(newPerson => {\n                    setPersons(persons.concat(newPerson))\n                    setIsConfirm(true)\n                    setMessage(`${newName} succesfully added to phonebook.`)\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 3000)\n                })\n                .catch(error => {\n                    setPersons(persons)\n                    setIsConfirm(false)\n                    setMessage(error.response.data.error)\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 3000)\n                })\n        }\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) =>  {\n        setShowAll(event.target.value === '') \n        setNewFilter(event.target.value)\n    }\n\n    const removeName = (person) => {\n        if (window.confirm(`Delete ${person.name}?`)) {\n            personService\n                .getAll()\n                .then(list => {\n                    const id = list.find(item => item.name === person.name).id\n                    personService\n                        .remove(id)\n                        .then(updatedPersons => {\n                            setPersons(updatedPersons)\n                            setIsConfirm(true)\n                            setMessage(`Succesfully deleted ${person.name} from phonebook.`)\n                            setTimeout(() => {\n                                setMessage(null)\n                            }, 3000)\n                    })\n                })\n                .catch(error => {\n                    setIsConfirm(true)\n                    setMessage(`Succesfully deleted ${person.name} from phonebook.`)\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 3000)\n                    setPersons(persons.filter(per => per.name !== person.name))\n                })\n        }\n    }\n\n    const updateNumber = (name, number) => {\n        if (window.confirm(`${name} is already added in the Phonebook. Replace the old number with the new one?`)) {\n            personService\n                .getAll()\n                .then(list => {\n                    const id = list.find(item => item.name === name).id\n                    const newPerson = {\n                        name: name,\n                        number: number\n                    }\n                    personService\n                        .update(id, newPerson)\n                        .then(updatedPersons => {\n                            setPersons(updatedPersons)\n                            setIsConfirm(true)\n                            setMessage(`Succesfully updated ${name}'s number.`)\n                            setTimeout(() => {\n                                setMessage(null)\n                            }, 3000)\n                        })    \n                })\n                .catch(error => {\n                    setIsConfirm(false)\n                    setMessage(`Information on ${name} has already been removed from server.`)\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 3000)\n                    setPersons(persons.filter(person => person.name !== name))\n                })\n        }\n    }\n\n    return (\n        <div>\n        <h2>Phonebook</h2>\n        <Notification message={message} confirm={isConfirm} />\n        <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\n        <h3>Add a new</h3>\n        <PersonForm addName={addName} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n        <h2>Numbers</h2>\n        <Persons personsToShow={personsToShow} removeName={removeName}/>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}